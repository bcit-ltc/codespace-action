name: Create Codespace on Branch Commit

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name to create codespace for'
        required: true
        type: string

jobs:
  create-codespace:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get branch name
        id: branch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "branch_name=${{ inputs.branch }}" >> $GITHUB_OUTPUT
          else
            echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi

      - name: Check if codespace already exists
        id: check_codespace
        run: |
          BRANCH_NAME="${{ steps.branch.outputs.branch_name }}"
          CODESPACE_NAME="${{ github.repository_owner }}-${{ github.event.repository.name }}-${BRANCH_NAME}"
          
          # Check existing codespaces
          EXISTING=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.CODESPACE_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/user/codespaces" | \
            jq -r --arg name "$CODESPACE_NAME" '.codespaces[] | select(.display_name == $name) | .name')
          
          if [ -n "$EXISTING" ]; then
            echo "codespace_exists=true" >> $GITHUB_OUTPUT
            echo "codespace_name=$EXISTING" >> $GITHUB_OUTPUT
          else
            echo "codespace_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create new codespace
        if: steps.check_codespace.outputs.codespace_exists == 'false'
        id: create_codespace
        run: |
          BRANCH_NAME="${{ steps.branch.outputs.branch_name }}"
          
          RESPONSE=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.CODESPACE_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/codespaces" \
            -d "{
              \"ref\": \"$BRANCH_NAME\",
              \"machine\": \"basicLinux32gb\",
              \"display_name\": \"${{ github.repository_owner }}-${{ github.event.repository.name }}-$BRANCH_NAME\"
            }")
          
          HTTP_CODE="${RESPONSE: -3}"
          BODY="${RESPONSE%???}"
          
          if [ "$HTTP_CODE" -eq 201 ] || [ "$HTTP_CODE" -eq 202 ]; then
            CODESPACE_NAME=$(echo "$BODY" | jq -r '.name')
            CODESPACE_URL=$(echo "$BODY" | jq -r '.web_url')
            echo "codespace_name=$CODESPACE_NAME" >> $GITHUB_OUTPUT
            echo "codespace_url=$CODESPACE_URL" >> $GITHUB_OUTPUT
            echo "creation_success=true" >> $GITHUB_OUTPUT
          else
            echo "Failed to create codespace. HTTP Code: $HTTP_CODE"
            echo "$BODY"
            echo "creation_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Wait for codespace to be ready
        if: steps.create_codespace.outputs.creation_success == 'true'
        run: |
          CODESPACE_NAME="${{ steps.create_codespace.outputs.codespace_name }}"
          echo "Waiting for codespace $CODESPACE_NAME to be ready..."
          
          for i in {1..30}; do
            STATUS=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.CODESPACE_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/user/codespaces/$CODESPACE_NAME" | \
              jq -r '.state')
            
            echo "Codespace status: $STATUS"
            
            if [ "$STATUS" = "Available" ]; then
              echo "Codespace is ready!"
              break
            elif [ "$STATUS" = "Failed" ]; then
              echo "Codespace creation failed"
              exit 1
            fi
            
            sleep 30
          done

      - name: Comment on commit with codespace link
        if: steps.create_codespace.outputs.creation_success == 'true'
        run: |
          CODESPACE_URL="${{ steps.create_codespace.outputs.codespace_url }}"
          BRANCH_NAME="${{ steps.branch.outputs.branch_name }}"
          
          # Create a comment on the latest commit
          curl -s \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.CODESPACE_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/comments" \
            -d "{
              \"body\": \"ðŸš€ **Codespace Created!**\n\nYour codespace for branch \`$BRANCH_NAME\` is ready:\n\n[Open Codespace]($CODESPACE_URL)\n\n*Created automatically by GitHub Actions*\"
            }"

      - name: Output codespace information
        run: |
          if [ "${{ steps.check_codespace.outputs.codespace_exists }}" = "true" ]; then
            echo "Codespace already exists for this branch"
          elif [ "${{ steps.create_codespace.outputs.creation_success }}" = "true" ]; then
            echo "New codespace created successfully!"
            echo "URL: ${{ steps.create_codespace.outputs.codespace_url }}"
          fi